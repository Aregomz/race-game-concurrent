{"version":3,"file":"static/js/809.af19b894.chunk.js","mappings":"AACAA,UAAaC,IACX,MAAM,KAAEC,EAAI,WAAEC,GAAeF,EAAMG,KAEnC,IAAKF,IAASG,MAAMC,QAAQJ,GAC1B,MAAM,IAAIK,MAAM,uCAGlB,MAAMC,EAAYN,EAAKO,KAAIC,GAAOA,EAAIC,WAEhCC,EAAWC,aAAY,KAO3B,GANAL,EAAUM,SAAQ,CAACH,EAAUI,KAC3BP,EAAUO,GAASC,KAAKC,IAAIN,EAA2B,EAAhBK,KAAKE,SAAcf,EAAW,IAGvEgB,YAAYX,GAERA,EAAUY,MAAKC,GAAOA,GAAOlB,IAAa,CAC5CmB,cAAcV,GACd,MAAMW,EAAcf,EAAUgB,WAAUH,GAAOA,GAAOlB,IACtDgB,YAAY,CAAEM,OAAQvB,EAAKqB,GAAaG,MAC1C,IACC,IAAI","sources":["workers/raceWorker.js"],"sourcesContent":["// raceWorker.js\r\nonmessage = (event) => {\r\n  const { cars, finishLine } = event.data;\r\n\r\n  if (!cars || !Array.isArray(cars)) {\r\n    throw new Error(\"Invalid data: cars must be an array\");\r\n  }\r\n\r\n  const positions = cars.map(car => car.position);\r\n\r\n  const interval = setInterval(() => {\r\n    positions.forEach((position, index) => {\r\n      positions[index] = Math.min(position + Math.random() * 5, finishLine);\r\n    });\r\n\r\n    postMessage(positions);\r\n\r\n    if (positions.some(pos => pos >= finishLine)) {\r\n      clearInterval(interval);\r\n      const winnerIndex = positions.findIndex(pos => pos >= finishLine);\r\n      postMessage({ winner: cars[winnerIndex].name });\r\n    }\r\n  }, 100);\r\n};\r\n"],"names":["onmessage","event","cars","finishLine","data","Array","isArray","Error","positions","map","car","position","interval","setInterval","forEach","index","Math","min","random","postMessage","some","pos","clearInterval","winnerIndex","findIndex","winner","name"],"sourceRoot":""}